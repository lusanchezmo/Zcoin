{
	"id": "8d499bd93cdf438f91f0fad34a058e4f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Crypto.sol": {
				"content": "// Version puede representar un rango. Ej >=0.7.0 <9.0.0\r\npragma solidity >= 0.7.0 <9.0.0;\r\n\r\n// Contrato\r\ncontract Cypto {\r\n    int cantidad;\r\n    address direccion;\r\n    bool firmado;\r\n  \r\n  // Función de inicialización de un contrato\r\n  constructor(bool estaFirmado) {\r\n      direccion= msg.sender;\r\n      firmado = estaFirmado;\r\n  }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Crypto.sol": {
				"Cypto": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "estaFirmado",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Crypto.sol\":107:341  contract Cypto {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Crypto.sol\":242:338  constructor(bool estaFirmado) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Crypto.sol\":292:302  msg.sender */\n  caller\n    /* \"contracts/Crypto.sol\":281:290  direccion */\n  0x01\n  0x00\n    /* \"contracts/Crypto.sol\":281:302  direccion= msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Crypto.sol\":321:332  estaFirmado */\n  dup1\n    /* \"contracts/Crypto.sol\":311:318  firmado */\n  0x01\n  0x14\n    /* \"contracts/Crypto.sol\":311:332  firmado = estaFirmado */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Crypto.sol\":242:338  constructor(bool estaFirmado) {\r... */\n  pop\n    /* \"contracts/Crypto.sol\":107:341  contract Cypto {\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:144   */\ntag_8:\n  0x00\n    /* \"#utility.yul\":92:98   */\n  dup2\n    /* \"#utility.yul\":86:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":108:138   */\n  tag_10\n    /* \"#utility.yul\":132:137   */\n  dup2\n    /* \"#utility.yul\":108:138   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":67:144   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":150:428   */\ntag_3:\n  0x00\n    /* \"#utility.yul\":266:268   */\n  0x20\n    /* \"#utility.yul\":254:263   */\n  dup3\n    /* \"#utility.yul\":245:252   */\n  dup5\n    /* \"#utility.yul\":241:264   */\n  sub\n    /* \"#utility.yul\":237:269   */\n  slt\n    /* \"#utility.yul\":234:236   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":282:283   */\n  0x00\n    /* \"#utility.yul\":279:280   */\n  dup1\n    /* \"#utility.yul\":272:284   */\n  revert\n    /* \"#utility.yul\":234:236   */\ntag_13:\n    /* \"#utility.yul\":325:326   */\n  0x00\n    /* \"#utility.yul\":350:411   */\n  tag_14\n    /* \"#utility.yul\":403:410   */\n  dup5\n    /* \"#utility.yul\":394:400   */\n  dup3\n    /* \"#utility.yul\":383:392   */\n  dup6\n    /* \"#utility.yul\":379:401   */\n  add\n    /* \"#utility.yul\":350:411   */\n  tag_8\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":340:411   */\n  swap2\n  pop\n    /* \"#utility.yul\":296:421   */\n  pop\n    /* \"#utility.yul\":224:428   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":434:524   */\ntag_15:\n  0x00\n    /* \"#utility.yul\":511:516   */\n  dup2\n    /* \"#utility.yul\":504:517   */\n  iszero\n    /* \"#utility.yul\":497:518   */\n  iszero\n    /* \"#utility.yul\":486:518   */\n  swap1\n  pop\n    /* \"#utility.yul\":476:524   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":530:646   */\ntag_11:\n    /* \"#utility.yul\":600:621   */\n  tag_18\n    /* \"#utility.yul\":615:620   */\n  dup2\n    /* \"#utility.yul\":600:621   */\n  tag_15\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":593:598   */\n  dup2\n    /* \"#utility.yul\":590:622   */\n  eq\n    /* \"#utility.yul\":580:582   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":636:637   */\n  0x00\n    /* \"#utility.yul\":633:634   */\n  dup1\n    /* \"#utility.yul\":626:638   */\n  revert\n    /* \"#utility.yul\":580:582   */\ntag_19:\n    /* \"#utility.yul\":570:646   */\n  pop\n  jump\t// out\n    /* \"contracts/Crypto.sol\":107:341  contract Cypto {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Crypto.sol\":107:341  contract Cypto {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220939e4158f8841258d6be0f2e6b8441c461ab9b53c2dd4a4c2cab5b52fb65788f64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:649:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "92:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "108:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "108:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:1",
														"type": ""
													}
												],
												"src": "7:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "224:204:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "270:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "279:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "282:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "272:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "272:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "272:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "245:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "254:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "241:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "241:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "266:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:32:1"
															},
															"nodeType": "YulIf",
															"src": "234:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "296:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "311:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "325:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "315:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "340:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "383:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "394:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "379:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "379:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "403:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "350:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "350:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "340:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "194:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "205:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "217:6:1",
														"type": ""
													}
												],
												"src": "150:278:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "476:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "486:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "511:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "504:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "504:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "497:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "497:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "486:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "458:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "468:7:1",
														"type": ""
													}
												],
												"src": "434:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "570:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "624:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "633:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "636:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "626:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "626:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "626:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "593:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "615:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "600:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "600:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "590:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "590:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "583:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "583:40:1"
															},
															"nodeType": "YulIf",
															"src": "580:2:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "563:5:1",
														"type": ""
													}
												],
												"src": "530:116:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506040516101353803806101358339818101604052810190602f919060a2565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160146101000a81548160ff0219169083151502179055505060e8565b600081519050609c8160d4565b92915050565b60006020828403121560b357600080fd5b600060bf84828501608f565b91505092915050565b60008115159050919050565b60db8160c8565b811460e557600080fd5b50565b603f806100f66000396000f3fe6080604052600080fdfea2646970667358221220939e4158f8841258d6be0f2e6b8441c461ab9b53c2dd4a4c2cab5b52fb65788f64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x135 CODESIZE SUB DUP1 PUSH2 0x135 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH1 0x2F SWAP2 SWAP1 PUSH1 0xA2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP PUSH1 0xE8 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH1 0x9C DUP2 PUSH1 0xD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xBF DUP5 DUP3 DUP6 ADD PUSH1 0x8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xDB DUP2 PUSH1 0xC8 JUMP JUMPDEST DUP2 EQ PUSH1 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x3F DUP1 PUSH2 0xF6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 SWAP15 COINBASE PC 0xF8 DUP5 SLT PC 0xD6 0xBE 0xF 0x2E PUSH12 0x8441C461AB9B53C2DD4A4C2C 0xAB JUMPDEST MSTORE 0xFB PUSH6 0x788F64736F6C PUSH4 0x43000800 STOP CALLER ",
							"sourceMap": "107:234:0:-:0;;;242:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;292:10;281:9;;:21;;;;;;;;;;;;;;;;;;321:11;311:7;;:21;;;;;;;;;;;;;;;;;;242:96;107:234;;7:137:1;;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:278::-;;266:2;254:9;245:7;241:23;237:32;234:2;;;282:1;279;272:12;234:2;325:1;350:61;403:7;394:6;383:9;379:22;350:61;:::i;:::-;340:71;;296:125;224:204;;;;:::o;434:90::-;;511:5;504:13;497:21;486:32;;476:48;;;:::o;530:116::-;600:21;615:5;600:21;:::i;:::-;593:5;590:32;580:2;;636:1;633;626:12;580:2;570:76;:::o;107:234:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220939e4158f8841258d6be0f2e6b8441c461ab9b53c2dd4a4c2cab5b52fb65788f64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 SWAP15 COINBASE PC 0xF8 DUP5 SLT PC 0xD6 0xBE 0xF 0x2E PUSH12 0x8441C461AB9B53C2DD4A4C2C 0xAB JUMPDEST MSTORE 0xFB PUSH6 0x788F64736F6C PUSH4 0x43000800 STOP CALLER ",
							"sourceMap": "107:234:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 107,
									"end": 341,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 107,
									"end": 341,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 107,
									"end": 341,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 242,
									"end": 338,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 338,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 242,
									"end": 338,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 242,
									"end": 338,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 242,
									"end": 338,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 242,
									"end": 338,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 242,
									"end": 338,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 242,
									"end": 338,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 242,
									"end": 338,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 292,
									"end": 302,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 281,
									"end": 290,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 290,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 302,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 281,
									"end": 302,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 281,
									"end": 302,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 281,
									"end": 302,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 281,
									"end": 302,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 281,
									"end": 302,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 281,
									"end": 302,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 281,
									"end": 302,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 281,
									"end": 302,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 281,
									"end": 302,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 281,
									"end": 302,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 281,
									"end": 302,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 281,
									"end": 302,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 281,
									"end": 302,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 281,
									"end": 302,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 281,
									"end": 302,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 281,
									"end": 302,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 281,
									"end": 302,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 321,
									"end": 332,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 311,
									"end": 318,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 318,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 311,
									"end": 332,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 311,
									"end": 332,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 311,
									"end": 332,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 311,
									"end": 332,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 311,
									"end": 332,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 311,
									"end": 332,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 311,
									"end": 332,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 311,
									"end": 332,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 311,
									"end": 332,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 311,
									"end": 332,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 311,
									"end": 332,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 311,
									"end": 332,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 311,
									"end": 332,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 311,
									"end": 332,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 311,
									"end": 332,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 311,
									"end": 332,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 311,
									"end": 332,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 311,
									"end": 332,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 242,
									"end": 338,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 107,
									"end": 341,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 107,
									"end": 341,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 144,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 92,
									"end": 98,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 86,
									"end": 99,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 108,
									"end": 138,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 132,
									"end": 137,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 108,
									"end": 138,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 108,
									"end": 138,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 108,
									"end": 138,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 108,
									"end": 138,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 67,
									"end": 144,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 67,
									"end": 144,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 67,
									"end": 144,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 67,
									"end": 144,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 67,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 150,
									"end": 428,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 150,
									"end": 428,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 150,
									"end": 428,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 266,
									"end": 268,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 254,
									"end": 263,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 245,
									"end": 252,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 241,
									"end": 264,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 237,
									"end": 269,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 234,
									"end": 236,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 234,
									"end": 236,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 234,
									"end": 236,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 282,
									"end": 283,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 280,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 272,
									"end": 284,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 234,
									"end": 236,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 234,
									"end": 236,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 411,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 403,
									"end": 410,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 394,
									"end": 400,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 383,
									"end": 392,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 379,
									"end": 401,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 350,
									"end": 411,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 350,
									"end": 411,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 350,
									"end": 411,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 350,
									"end": 411,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 340,
									"end": 411,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 340,
									"end": 411,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 296,
									"end": 421,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 224,
									"end": 428,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 224,
									"end": 428,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 224,
									"end": 428,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 224,
									"end": 428,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 224,
									"end": 428,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 434,
									"end": 524,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 434,
									"end": 524,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 434,
									"end": 524,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 511,
									"end": 516,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 504,
									"end": 517,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 497,
									"end": 518,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 486,
									"end": 518,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 486,
									"end": 518,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 476,
									"end": 524,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 476,
									"end": 524,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 476,
									"end": 524,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 476,
									"end": 524,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 530,
									"end": 646,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 530,
									"end": 646,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 600,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 615,
									"end": 620,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 600,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 600,
									"end": 621,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 600,
									"end": 621,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 600,
									"end": 621,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 593,
									"end": 598,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 590,
									"end": 622,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 580,
									"end": 582,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 580,
									"end": 582,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 636,
									"end": 637,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 634,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 626,
									"end": 638,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 580,
									"end": 582,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 580,
									"end": 582,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 570,
									"end": 646,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 570,
									"end": 646,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 107,
									"end": 341,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 107,
									"end": 341,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 107,
									"end": 341,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 107,
									"end": 341,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 341,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 107,
									"end": 341,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 341,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 107,
									"end": 341,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 341,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220939e4158f8841258d6be0f2e6b8441c461ab9b53c2dd4a4c2cab5b52fb65788f64736f6c63430008000033",
									".code": [
										{
											"begin": 107,
											"end": 341,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 107,
											"end": 341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 341,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 341,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"estaFirmado\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Crypto.sol\":\"Cypto\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Crypto.sol\":{\"keccak256\":\"0x182c29f09e54c30321d6f1f824fef33871a0f514bfcf39ceb1bd94eb9903282d\",\"urls\":[\"bzz-raw://0cecb018ffb014c6b38c5eaa7bd210e318fbe8e1bfcb5b836d70c1ef36d00e3a\",\"dweb:/ipfs/Qmf5ZT6TLxnVDw5pQTKN8Z2hLpfvpFYdJEb2NYLnJ51qmV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Crypto.sol:Cypto",
								"label": "cantidad",
								"offset": 0,
								"slot": "0",
								"type": "t_int256"
							},
							{
								"astId": 5,
								"contract": "contracts/Crypto.sol:Cypto",
								"label": "direccion",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 7,
								"contract": "contracts/Crypto.sol:Cypto",
								"label": "firmado",
								"offset": 20,
								"slot": "1",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_int256": {
								"encoding": "inplace",
								"label": "int256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Crypto.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Crypto.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Crypto.sol": {
				"ast": {
					"absolutePath": "contracts/Crypto.sol",
					"exportedSymbols": {
						"Cypto": [
							23
						]
					},
					"id": 24,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"9.0",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "58:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 23,
							"linearizedBaseContracts": [
								23
							],
							"name": "Cypto",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "cantidad",
									"nodeType": "VariableDeclaration",
									"scope": 23,
									"src": "129:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 2,
										"name": "int",
										"nodeType": "ElementaryTypeName",
										"src": "129:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "direccion",
									"nodeType": "VariableDeclaration",
									"scope": 23,
									"src": "148:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "148:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "firmado",
									"nodeType": "VariableDeclaration",
									"scope": 23,
									"src": "172:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 6,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "172:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "272:66:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 12,
														"name": "direccion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "281:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 13,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "292:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "292:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "281:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "281:21:0"
											},
											{
												"expression": {
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 17,
														"name": "firmado",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "311:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 18,
														"name": "estaFirmado",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "321:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "311:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "311:21:0"
											}
										]
									},
									"id": 22,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "estaFirmado",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "254:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 8,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "254:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:18:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:0:0"
									},
									"scope": 23,
									"src": "242:96:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 24,
							"src": "107:234:0"
						}
					],
					"src": "58:283:0"
				},
				"id": 0
			}
		}
	}
}